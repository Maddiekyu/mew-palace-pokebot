import unittest
from unittest import TestCase
from rolebot import validate_user_input

class TestRolebot(unittest.TestCase):
    def test_validate(self):
    #Valid input such as "%sh Mimikyu" should go through.
        self.assertEqual(validate_user_input(f"%sh Mimikyu"), "found mimikyu")
        self.assertEqual(validate_user_input(f"%sh MIMIKYU"), "found mimikyu")
        self.assertEqual(validate_user_input(f"%sh mimikyu"), "found mimikyu")
        self.assertEqual(validate_user_input(f"%sh MiMiKyU"), "found mimikyu")
        self.assertEqual(validate_user_input(f"%sh Mimikyu"), "found mimikyu")
        self.assertEqual(validate_user_input(f"%sh Kyogre"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh KYOGRE"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh kyogre"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh KyOgRe"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh Kyogre"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh Mr. Mime"), "found mr. mime")
        self.assertEqual(validate_user_input(f"%sh MR. MIME"), "found mr. mime")
        self.assertEqual(validate_user_input(f"%sh mr. mime"), "found mr. mime")
        self.assertEqual(validate_user_input(f"%sh Mr. MiMe"), "found mr. mime")
        self.assertEqual(validate_user_input(f"%sh Mr. Mime"), "found mr. mime")
        self.assertEqual(validate_user_input(f"%sh Farfetch'd"), "found farfetch'd")
        self.assertEqual(validate_user_input(f"%sh FARFETCH'D"), "found farfetch'd")
        self.assertEqual(validate_user_input(f"%sh farfetch'd"), "found farfetch'd")
        self.assertEqual(validate_user_input(f"%sh FaRfEtCh'D"), "found farfetch'd")
        self.assertEqual(validate_user_input(f"%sh Farfetch'd"), "found farfetch'd")
        self.assertEqual(validate_user_input(f"%sh Kommo-o"), "found kommo-o")
        self.assertEqual(validate_user_input(f"%sh KOMMO-O"), "found kommo-o")
        self.assertEqual(validate_user_input(f"%sh kommo-o"), "found kommo-o")
        self.assertEqual(validate_user_input(f"%sh KoMmO-o"), "found kommo-o")
        self.assertEqual(validate_user_input(f"%sh Kommo-o"), "found kommo-o")
        self.assertEqual(validate_user_input(f"%sh Groudon"), "found groudon")
        self.assertEqual(validate_user_input(f"%sh GROUDON"), "found groudon")
        self.assertEqual(validate_user_input(f"%sh groudon"), "found groudon")
        self.assertEqual(validate_user_input(f"%sh GrOuDoN"), "found groudon")
        self.assertEqual(validate_user_input(f"%sh Groudon"), "found groudon")
        self.assertEqual(validate_user_input(f"%sh Pichu"), "found pichu")
        self.assertEqual(validate_user_input(f"%sh PICHU"), "found pichu")
        self.assertEqual(validate_user_input(f"%sh pichu"), "found pichu")
        self.assertEqual(validate_user_input(f"%sh PiChU"), "found pichu")
        self.assertEqual(validate_user_input(f"%sh Pichu"), "found pichu")
        self.assertEqual(validate_user_input(f"%sh Vulpix"), "found vulpix")
        self.assertEqual(validate_user_input(f"%sh VULPIX"), "found vulpix")
        self.assertEqual(validate_user_input(f"%sh vulpix"), "found vulpix")
        self.assertEqual(validate_user_input(f"%sh VuLpIx"), "found vulpix")
        self.assertEqual(validate_user_input(f"%sh Diglett"), "found diglett")
        self.assertEqual(validate_user_input(f"%sh DIGLETT"), "found diglett")
        self.assertEqual(validate_user_input(f"%sh diglett"), "found diglett")
        self.assertEqual(validate_user_input(f"%sh DiGlEtT"), "found diglett")
        self.assertEqual(validate_user_input(f"%sh Diglett"), "found diglett")
        self.assertEqual(validate_user_input(f"%sh Bulbasaur"), "found bulbasaur")
        self.assertEqual(validate_user_input(f"%sh BULBASAUR"), "found bulbasaur")
        self.assertEqual(validate_user_input(f"%sh bulbasaur"), "found bulbasaur")
        self.assertEqual(validate_user_input(f"%sh BuLbAsAuR"), "found bulbasaur")
        self.assertEqual(validate_user_input(f"%sh Bulbasaur"), "found bulbasaur")
        self.assertEqual(validate_user_input(f"%sh Rayquaza"), "found rayquaza")
        self.assertEqual(validate_user_input(f"%sh RAYQUAZA"), "found rayquaza")
        self.assertEqual(validate_user_input(f"%sh rayquaza"), "found rayquaza")
        self.assertEqual(validate_user_input(f"%sh RaYqUaZa"), "found rayquaza")
        self.assertEqual(validate_user_input(f"%sh Rayquaza"), "found rayquaza")
        self.assertEqual(validate_user_input(f"%sh Pikachu"), "found pikachu")
        self.assertEqual(validate_user_input(f"%sh PIKACHU"), "found pikachu")
        self.assertEqual(validate_user_input(f"%sh pikachu"), "found pikachu")
        self.assertEqual(validate_user_input(f"%sh PiKaChU"), "found pikachu")
        self.assertEqual(validate_user_input(f"%sh Dratini"), "found dratini")
        self.assertEqual(validate_user_input(f"%sh DRATINI"), "found dratini")
        self.assertEqual(validate_user_input(f"%sh dratini"), "found dratini")
        self.assertEqual(validate_user_input(f"%sh DrAtInI"), "found dratini")
        self.assertEqual(validate_user_input(f"%sh Dratini"), "found dratini")
        self.assertEqual(validate_user_input(f"%sh Ninetales"), "found ninetales")
        self.assertEqual(validate_user_input(f"%sh NINETALES"), "found ninetales")
        self.assertEqual(validate_user_input(f"%sh ninetales"), "found ninetales")
        self.assertEqual(validate_user_input(f"%sh NiNeTaLeS"), "found ninetales")
        self.assertEqual(validate_user_input(f"%sh Ninetales"), "found ninetales")
        self.assertEqual(validate_user_input(f"%sh Charmander"), "found charmander")
        self.assertEqual(validate_user_input(f"%sh CHARMANDER"), "found charmander")
        self.assertEqual(validate_user_input(f"%sh charmander"), "found charmander")
        self.assertEqual(validate_user_input(f"%sh ChArMaNdEr"), "found charmander")
        self.assertEqual(validate_user_input(f"%sh Charmander"), "found charmander")
        self.assertEqual(validate_user_input(f"%sh Squirtle"), "found squirtle")
        self.assertEqual(validate_user_input(f"%sh SQUIRTLE"), "found squirtle")
        self.assertEqual(validate_user_input(f"%sh squirtle"), "found squirtle")
        self.assertEqual(validate_user_input(f"%sh SqUiRtLe"), "found squirtle")
        self.assertEqual(validate_user_input(f"%sh Squirtle"), "found squirtle")
        self.assertEqual(validate_user_input(f"%sh Deoxys"), "found deoxys")
        self.assertEqual(validate_user_input(f"%sh DEOXYS"), "found deoxys")
        self.assertEqual(validate_user_input(f"%sh deoxys"), "found deoxys")
        self.assertEqual(validate_user_input(f"%sh DeOxYs"), "found deoxys")
        self.assertEqual(validate_user_input(f"%sh Deoxys"), "found deoxys")
        self.assertEqual(validate_user_input(f"%sh Archen"), "found archen")
        self.assertEqual(validate_user_input(f"%sh ARCHEN"), "found archen")
        self.assertEqual(validate_user_input(f"%sh archen"), "found archen")
        self.assertEqual(validate_user_input(f"%sh ArChEn"), "found archen")
        self.assertEqual(validate_user_input(f"%sh Archen"), "found archen")
        self.assertEqual(validate_user_input(f"%sh Cyndaquil"), "found cyndaquil")
        self.assertEqual(validate_user_input(f"%sh CYNDAQUIL"), "found cyndaquil")
        self.assertEqual(validate_user_input(f"%sh cyndaquil"), "found cyndaquil")
        self.assertEqual(validate_user_input(f"%sh CyNdAqUiL"), "found cyndaquil")
        self.assertEqual(validate_user_input(f"%sh Cyndaquil"), "found cyndaquil")
        self.assertEqual(validate_user_input(f"%sh Totodile"), "found totodile")
        self.assertEqual(validate_user_input(f"%sh TOTODILE"), "found totodile")
        self.assertEqual(validate_user_input(f"%sh totodile"), "found totodile")
        self.assertEqual(validate_user_input(f"%sh ToToDiLe"), "found totodile")
        self.assertEqual(validate_user_input(f"%sh Totodile"), "found totodile")
        self.assertEqual(validate_user_input(f"%sh Chikorita"), "found chikorita")
        self.assertEqual(validate_user_input(f"%sh CHIKORITA"), "found chikorita")
        self.assertEqual(validate_user_input(f"%sh chikorita"), "found chikorita")
        self.assertEqual(validate_user_input(f"%sh ChIkOrItA"), "found chikorita")
        self.assertEqual(validate_user_input(f"%sh Chikorita"), "found chikorita")
        self.assertEqual(validate_user_input(f"%sh Wingull"), "found wingull")
        self.assertEqual(validate_user_input(f"%sh WINGULL"), "found wingull")
        self.assertEqual(validate_user_input(f"%sh wingull"), "found wingull")
        self.assertEqual(validate_user_input(f"%sh WiNgUlL"), "found wingull")
        self.assertEqual(validate_user_input(f"%sh Wingull"), "found wingull")
        self.assertEqual(validate_user_input(f"%sh Pelipper"), "found pelipper")
        self.assertEqual(validate_user_input(f"%sh PELIPPER"), "found pelipper")
        self.assertEqual(validate_user_input(f"%sh pelipper"), "found pelipper")
        self.assertEqual(validate_user_input(f"%sh PeLiPpEr"), "found pelipper")
        self.assertEqual(validate_user_input(f"%sh Pelipper"), "found pelipper")
        self.assertEqual(validate_user_input(f"%sh Cleffa"), "found cleffa")
        self.assertEqual(validate_user_input(f"%sh CLEFFA"), "found cleffa")
        self.assertEqual(validate_user_input(f"%sh cleffa"), "found cleffa")
        self.assertEqual(validate_user_input(f"%sh ClEfFa"), "found cleffa")
        self.assertEqual(validate_user_input(f"%sh Cleffa"), "found cleffa")
        self.assertEqual(validate_user_input(f"%sh Magby"), "found magby")
        self.assertEqual(validate_user_input(f"%sh MAGBY"), "found magby")
        self.assertEqual(validate_user_input(f"%sh magby"), "found magby")
        self.assertEqual(validate_user_input(f"%sh MaGbY"), "found magby")
        self.assertEqual(validate_user_input(f"%sh magby"), "found magby")
        self.assertEqual(validate_user_input(f"%sh Kyogre"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh Porygon"), "found porygon")
        self.assertEqual(validate_user_input(f"%sh PORYGON"), "found porygon")
        self.assertEqual(validate_user_input(f"%sh porygon"), "found porygon")
        self.assertEqual(validate_user_input(f"%sh PoRyGoN"), "found porygon")
        self.assertEqual(validate_user_input(f"%sh Porygon"), "found porygon")
        self.assertEqual(validate_user_input(f"%sh Meowth"), "found meowth")
        self.assertEqual(validate_user_input(f"%sh MEOWTH"), "found meowth")
        self.assertEqual(validate_user_input(f"%sh meowth"), "found meowth")
        self.assertEqual(validate_user_input(f"%sh MeOwTh"), "found meowth")
        self.assertEqual(validate_user_input(f"%sh Meowth"), "found meowth")
        self.assertEqual(validate_user_input(f"%sh Porygon2"), "found porygon2")
        self.assertEqual(validate_user_input(f"%sh PORYGON2"), "found porygon2")
        self.assertEqual(validate_user_input(f"%sh porygon2"), "found porygon2")
        self.assertEqual(validate_user_input(f"%sh PoRyGoN2"), "found porygon2")
        self.assertEqual(validate_user_input(f"%sh Porygon2"), "found porygon2")
        self.assertEqual(validate_user_input(f"%sh Mankey"), "found mankey")
        self.assertEqual(validate_user_input(f"%sh MANKEY"), "found mankey")
        self.assertEqual(validate_user_input(f"%sh mankey"), "found mankey")
        self.assertEqual(validate_user_input(f"%sh MaNkEy"), "found mankey")
        self.assertEqual(validate_user_input(f"%sh Mankey"), "found mankey")
        self.assertEqual(validate_user_input(f"%sh Snivy"), "found snivy")
        self.assertEqual(validate_user_input(f"%sh SNIVY"), "found snivy")
        self.assertEqual(validate_user_input(f"%sh snivy"), "found snivy")
        self.assertEqual(validate_user_input(f"%sh SnIvY"), "found snivy")
        self.assertEqual(validate_user_input(f"%sh Snivy"), "found snivy")
        self.assertEqual(validate_user_input(f"%sh Tepig"), "found tepig")
        self.assertEqual(validate_user_input(f"%sh Oshawott"), "found oshawott")
        self.assertEqual(validate_user_input(f"%sh Jigglypuff"), "found jigglypuff")
        self.assertEqual(validate_user_input(f"%sh Tauros"), "found tauros")
        self.assertEqual(validate_user_input(f"%sh Rhyhorn"), "found rhyhorn")
        self.assertEqual(validate_user_input(f"%sh Rhydon"), "found rhydon")
        self.assertEqual(validate_user_input(f"%sh Persian"), "found persian")
        self.assertEqual(validate_user_input(f"%sh Charmeleon"), "found charmeleon")
        self.assertEqual(validate_user_input(f"%sh Wartortle"), "found wartortle")
        self.assertEqual(validate_user_input(f"%sh Ivysaur"), "found ivysaur")
        self.assertEqual(validate_user_input(f"%sh Blastoise"), "found blastoise")
        self.assertEqual(validate_user_input(f"%sh Charizard"), "found charizard")
        self.assertEqual(validate_user_input(f"%sh Venusaur"), "found venusaur")
        self.assertEqual(validate_user_input(f"%sh Grimer"), "found grimer")
        self.assertEqual(validate_user_input(f"%sh Muk"), "found muk")
        self.assertEqual(validate_user_input(f"%sh Servine"), "found servine")
        self.assertEqual(validate_user_input(f"%sh Pignite"), "found pignite")
        self.assertEqual(validate_user_input(f"%sh Dewott"), "found dewott")
        self.assertEqual(validate_user_input(f"%sh Pidgey"), "found pidgey")
        self.assertEqual(validate_user_input(f"%sh Magnemite"), "found magnemite")
        self.assertEqual(validate_user_input(f"%sh KYOGRE"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh kyogre"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh Kyogre"), "found kyogre")
        self.assertEqual(validate_user_input(f"%sh kYOgrE"), "found kyogre")

    def test_troll_input(self):
    #Users who enter garbage should get rejected.
        self.assertRaises(ValueError, validate_user_input, f"%sh bugs bunny")
        self.assertRaises(ValueError, validate_user_input, f"%sh m1m1kyu")
        self.assertRaises(ValueError, validate_user_input, f"%sh m i m i k y u")
        self.assertRaises(ValueError, validate_user_input, f"%sh maddiekyu is the best")
        self.assertRaises(ValueError, validate_user_input, f"%sh mr mime")
        self.assertRaises(ValueError, validate_user_input, f"%sh KommoO")
        self.assertRaises(ValueError, validate_user_input, f"%sh PorygonZ")